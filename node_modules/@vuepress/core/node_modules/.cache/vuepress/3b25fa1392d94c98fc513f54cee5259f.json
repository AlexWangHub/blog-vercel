{"remainingRequest":"/Users/blibli/Desktop/vuepress-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/blibli/Desktop/vuepress-starter/docs/.vuepress/theme/layouts/Layout.vue?vue&type=style&index=0&id=207e6eb0&lang=stylus&","dependencies":[{"path":"/Users/blibli/Desktop/vuepress-starter/docs/.vuepress/theme/layouts/Layout.vue","mtime":1583055818000},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/css-loader/dist/cjs.js","mtime":1656864014513},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656864014654},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/postcss-loader/src/index.js","mtime":1656864014620},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/stylus-loader/index.js","mtime":1656864014916},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1656864014424},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":1656864014654}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAbWVkaWEgKG1heC13aWR0aDogNzE5cHgpDQogIC5teV9pbnRyb2R1Y2UNCiAgICBkaXNwbGF5IG5vbmUNCg=="},{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";AA4HA;AACA;AACA","file":"Layout.vue","sourceRoot":"docs/.vuepress/theme/layouts","sourcesContent":["<template>\r\n  <div class=\"theme-container\" :class=\"pageClasses\" @touchstart=\"onTouchStart\" @touchend=\"onTouchEnd\">\r\n    <Navbar v-if=\"shouldShowNavbar\" @toggle-sidebar=\"toggleSidebar\" />\r\n\r\n    <div class=\"sidebar-mask\" @click=\"toggleSidebar(false)\"></div>\r\n\r\n    <Sidebar :items=\"sidebarItems\" @toggle-sidebar=\"toggleSidebar\">\r\n      <template #top>\r\n        <div :style=\"{ paddingLeft: '1rem' }\" class=\"my_introduce\">\r\n          <introduce />\r\n        </div>\r\n      </template>\r\n      <slot name=\"sidebar-bottom\" #bottom />\r\n    </Sidebar>\r\n\r\n    <Home v-if=\"$page.frontmatter.home\" />\r\n\r\n    <Page v-else :sidebar-items=\"sidebarItems\">\r\n      <slot name=\"page-top\" #top />\r\n      <slot name=\"page-bottom\" #bottom />\r\n    </Page>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Home from '@theme/components/Home.vue'\r\nimport Navbar from '@theme/components/Navbar.vue'\r\nimport Page from '@theme/components/Page.vue'\r\nimport Sidebar from '@theme/components/Sidebar.vue'\r\nimport introduce from \"../../components/introduce.vue\"\r\nimport { resolveSidebarItems } from '../util'\r\n\r\nexport default {\r\n  components: { Home, Page, Sidebar, Navbar, introduce },\r\n\r\n  data() {\r\n    return {\r\n      isSidebarOpen: false\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    shouldShowNavbar() {\r\n      const { themeConfig } = this.$site\r\n      const { frontmatter } = this.$page\r\n      if (frontmatter.navbar === false || themeConfig.navbar === false) {\r\n        return false\r\n      }\r\n      return (\r\n        this.$title ||\r\n        themeConfig.logo ||\r\n        themeConfig.repo ||\r\n        themeConfig.nav ||\r\n        this.$themeLocaleConfig.nav\r\n      )\r\n    },\r\n\r\n    shouldShowSidebar() {\r\n      const { frontmatter } = this.$page\r\n      return (\r\n        !frontmatter.home &&\r\n        frontmatter.sidebar !== false &&\r\n        this.sidebarItems.length\r\n      )\r\n    },\r\n\r\n    sidebarItems() {\r\n      return resolveSidebarItems(\r\n        this.$page,\r\n        this.$page.regularPath,\r\n        this.$site,\r\n        this.$localePath\r\n      )\r\n    },\r\n\r\n    pageClasses() {\r\n      const userPageClass = this.$page.frontmatter.pageClass\r\n      return [\r\n        {\r\n          'no-navbar': !this.shouldShowNavbar,\r\n          'sidebar-open': this.isSidebarOpen,\r\n          'no-sidebar': !this.shouldShowSidebar\r\n        },\r\n        userPageClass\r\n      ]\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.$router.afterEach(() => {\r\n      this.isSidebarOpen = false\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    toggleSidebar(to) {\r\n      this.isSidebarOpen = typeof to === 'boolean' ? to : !this.isSidebarOpen\r\n      this.$emit('toggle-sidebar', this.isSidebarOpen)\r\n    },\r\n\r\n    // side swipe\r\n    onTouchStart(e) {\r\n      this.touchStart = {\r\n        x: e.changedTouches[0].clientX,\r\n        y: e.changedTouches[0].clientY\r\n      }\r\n    },\r\n\r\n    onTouchEnd(e) {\r\n      const dx = e.changedTouches[0].clientX - this.touchStart.x\r\n      const dy = e.changedTouches[0].clientY - this.touchStart.y\r\n      if (Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > 40) {\r\n        if (dx > 0 && this.touchStart.x <= 80) {\r\n          this.toggleSidebar(true)\r\n        } else {\r\n          this.toggleSidebar(false)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n@media (max-width: 719px)\r\n  .my_introduce\r\n    display none\r\n</style>\r\n\r\n\r\n"]}]}