{"remainingRequest":"/Users/blibli/Desktop/vuepress-starter/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/blibli/Desktop/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/blibli/Desktop/vuepress-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/blibli/Desktop/vuepress-starter/node_modules/vuepress-plugin-comment/Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/vuepress-plugin-comment/Comment.vue","mtime":1656864028664},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1656864014424},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/babel-loader/lib/index.js","mtime":1656864014423},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1656864014424},{"path":"/Users/blibli/Desktop/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":1656864014654}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcHJvdmlkZXIsIHJlbmRlckNvbmZpZywgbG9hZFNjcmlwdCB9IGZyb20gJy4vdXRpbCc7CmNvbnN0IGNvbW1lbnREb21JRCA9ICd2dWVwcmVzcy1wbHVnaW4tY29tbWVudCc7CmxldCB0aW1lciA9IG51bGw7CmV4cG9ydCBkZWZhdWx0IHsKICBtb3VudGVkKCkgewogICAgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgY29uc3QgZnJvbnRtYXR0ZXIgPSB7CiAgICAgICAgdG86IHt9LAogICAgICAgIGZyb206IHt9LAogICAgICAgIC4uLnRoaXMuJGZyb250bWF0dGVyCiAgICAgIH07CiAgICAgIGNsZWFyKCkgJiYgbmVlZENvbW1lbnQoZnJvbnRtYXR0ZXIpICYmIHJlbmRlckNvbW1lbnQoZnJvbnRtYXR0ZXIpOwogICAgfSwgMTAwMCk7CiAgICB0aGlzLiRyb3V0ZXIuYWZ0ZXJFYWNoKCh0bywgZnJvbSkgPT4gewogICAgICBpZiAodG8gJiYgZnJvbSAmJiB0by5wYXRoID09PSBmcm9tLnBhdGgpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IGZyb250bWF0dGVyID0gewogICAgICAgIHRvLAogICAgICAgIGZyb20sCiAgICAgICAgLi4udGhpcy4kZnJvbnRtYXR0ZXIKICAgICAgfTsKICAgICAgY2xlYXIoKSAmJiBuZWVkQ29tbWVudChmcm9udG1hdHRlcikgJiYgcmVuZGVyQ29tbWVudChmcm9udG1hdHRlcik7CiAgICB9KTsKICB9Cgp9OwovKioKICogQ2xlYXIgbGFzdCBwYWdlIGNvbW1lbnQgZG9tCiAqLwoKZnVuY3Rpb24gY2xlYXIoZnJvbnRtYXR0ZXIpIHsKICBzd2l0Y2ggKENPTU1FTlRfQ0hPT1NFTikgewogICAgY2FzZSAnZ2l0YWxrJzoKICAgICAgcmV0dXJuIHByb3ZpZGVyLmdpdGFsay5jbGVhcihjb21tZW50RG9tSUQpOwoKICAgIGNhc2UgJ3ZhbGluZSc6CiAgICAgIGxldCBlbCA9IENPTU1FTlRfT1BUSU9OUy5lbCB8fCBjb21tZW50RG9tSUQ7CgogICAgICBpZiAoZWwuc3RhcnRzV2l0aCgnIycpKSB7CiAgICAgICAgZWwgPSBlbC5zbGljZSgxKTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2coZWwpOwogICAgICByZXR1cm4gcHJvdmlkZXIudmFsaW5lLmNsZWFyKGVsKTsKCiAgICBkZWZhdWx0OgogICAgICByZXR1cm4gZmFsc2U7CiAgfQp9Ci8qKgogKiBDaGVjayBpZiBjdXJyZW50IHBhZ2UgbmVlZHMgcmVuZGVyIGNvbW1lbnQKICovCgoKZnVuY3Rpb24gbmVlZENvbW1lbnQoZnJvbnRtYXR0ZXIpIHsKICByZXR1cm4gZnJvbnRtYXR0ZXIuY29tbWVudCAhPT0gZmFsc2UgJiYgZnJvbnRtYXR0ZXIuY29tbWVudHMgIT09IGZhbHNlOwp9Ci8qKgogKiBSZW5kZXIgY29tbWVudCBkb20gYW5kIGFwcGVuZCBpdCB0byBjb250YWluZXIKICovCgoKZnVuY3Rpb24gcmVuZGVyQ29tbWVudChmcm9udG1hdHRlcikgewogIGNsZWFyVGltZW91dCh0aW1lcik7CiAgY29uc3QgcGFyZW50RE9NID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihDT01NRU5UX0NPTlRBSU5FUik7CgogIGlmICghcGFyZW50RE9NKSB7CiAgICB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4gcmVuZGVyQ29tbWVudChmcm9udG1hdHRlciksIDIwMCk7CiAgICByZXR1cm47CiAgfQoKICBzd2l0Y2ggKENPTU1FTlRfQ0hPT1NFTikgewogICAgY2FzZSAnZ2l0YWxrJzoKICAgICAgcmV0dXJuIHByb3ZpZGVyLmdpdGFsay5yZW5kZXIoZnJvbnRtYXR0ZXIsIGNvbW1lbnREb21JRCk7CgogICAgY2FzZSAndmFsaW5lJzoKICAgICAgbGV0IGVsID0gQ09NTUVOVF9PUFRJT05TLmVsIHx8IGNvbW1lbnREb21JRDsKCiAgICAgIGlmIChlbC5zdGFydHNXaXRoKCcjJykpIHsKICAgICAgICBlbCA9IGVsLnNsaWNlKDEpOwogICAgICB9CgogICAgICByZXR1cm4gcHJvdmlkZXIudmFsaW5lLnJlbmRlcihmcm9udG1hdHRlciwgZWwpOwoKICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiBmYWxzZTsKICB9Cn0="},{"version":3,"mappings":"AAKA,SACAA,QADA,EAEAC,YAFA,EAGAC,UAHA,QAIA,QAJA;AAMA;AACA;AAEA;EACAC;IACAC;MACA;QACAC,MADA;QAEAC,QAFA;QAGA;MAHA;MAKAC;IACA,CAPA,EAOA,IAPA;IASA;MACA;QACA;MACA;;MACA;QACAF,EADA;QAEAC,IAFA;QAGA;MAHA;MAKAC;IACA,CAVA;EAWA;;AAtBA;AAyBA;AACA;AACA;;AACA;EACA;IACA;MACA;;IACA;MACA;;MACA;QACAC;MACA;;MACAC;MACA;;IACA;MAAA;EAVA;AAYA;AAEA;AACA;AACA;;;AACA;EACA;AACA;AAEA;AACA;AACA;;;AACA;EACAC;EAEA;;EACA;IACAN;IACA;EACA;;EAEA;IACA;MACA;;IACA;MACA;;MACA;QACAI;MACA;;MACA;;IACA;MAAA;EATA;AAWA","names":["provider","renderConfig","loadScript","mounted","timer","to","from","clear","el","console","clearTimeout"],"sourceRoot":"node_modules/vuepress-plugin-comment","sources":["Comment.vue"],"sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\nimport {\n  provider,\n  renderConfig,\n  loadScript,\n} from './util'\n\nconst commentDomID = 'vuepress-plugin-comment' \nlet timer = null\n\nexport default {\n  mounted () {\n    timer = setTimeout(() => {\n      const frontmatter = {\n        to: {},\n        from: {},\n        ...this.$frontmatter\n      }\n      clear() && needComment(frontmatter) && renderComment(frontmatter)\n    }, 1000)\n\n    this.$router.afterEach((to, from) => {\n      if (to && from && to.path === from.path) {\n        return\n      }\n      const frontmatter = {\n        to,\n        from,\n        ...this.$frontmatter\n      }\n      clear() && needComment(frontmatter) && renderComment(frontmatter)\n    })\n  }\n}\n\n/**\n * Clear last page comment dom\n */\nfunction clear (frontmatter) {\n  switch (COMMENT_CHOOSEN) {\n    case 'gitalk': \n      return provider.gitalk.clear(commentDomID)\n    case 'valine': \n      let el = COMMENT_OPTIONS.el || commentDomID\n      if (el.startsWith('#')) {\n        el = el.slice(1)\n      }\n      console.log(el)\n      return provider.valine.clear(el)\n    default: return false\n  }\n}\n\n/**\n * Check if current page needs render comment\n */\nfunction needComment (frontmatter) {\n  return frontmatter.comment !== false && frontmatter.comments !== false\n}\n\n/**\n * Render comment dom and append it to container\n */\nfunction renderComment (frontmatter) {\n  clearTimeout(timer)\n\n  const parentDOM = document.querySelector(COMMENT_CONTAINER)\n  if (!parentDOM) {\n    timer = setTimeout(() => renderComment(frontmatter), 200)\n    return \n  }\n\n  switch (COMMENT_CHOOSEN) {\n    case 'gitalk': \n      return provider.gitalk.render(frontmatter, commentDomID)\n    case 'valine': \n      let el = COMMENT_OPTIONS.el || commentDomID\n      if (el.startsWith('#')) {\n        el = el.slice(1)\n      }\n      return provider.valine.render(frontmatter, el)\n    default: return false\n  }\n}\n</script>\n"]}]}